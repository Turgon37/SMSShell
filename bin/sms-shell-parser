#!/usr/bin/env python3

# This file is a part of SMSShell
#
# Copyright (c) 2016-2018 Pierre GINDRAUD
#
# SMSShell is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SMSShell is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SMSShell. If not, see <http://www.gnu.org/licenses/>.

"""SMSShell Gammu SMS Parser

This file is able to parse an sms received by gammu-smsd tool and to format it into JSON.
"""

__author__ = 'Pierre GINDRAUD'
__license__ = 'GPL-3.0'
__version__ = '1.0.0'
__maintainer__ = 'Pierre GINDRAUD'
__email__ = 'pgindraud@gmail.com'

# System imports
import argparse
import json
import os
import sys

# Check python version
assert sys.version_info >= (3, 4)

# Projet Import
# Try to import from current directory
try:
    import SMSShell
except ImportError:
    sys.path.insert(1, os.path.join(
        os.path.dirname(
            os.path.realpath(__file__)
        ),
        os.pardir)
                   )
    try:
        import SMSShell
    except ImportError as ex:
        import traceback
        traceback.print_exc(file=sys.stdout)
        print("Impossible to load the SMSShell module")
        print(str(ex))
        sys.exit(1)

import SMSShell.utils



if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="SMSShell parser version v" + __version__,
                                     argument_default=argparse.SUPPRESS,
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-i', '--input', action='store', dest='input', default='env',
                        choices=['env', 'file'],
                        help='Where to pick up raw messages')
    parser.add_argument('-ia', '--input-arg', action='append', dest='input_arg', type=str,
                        default=[],
                        help=('Optional arguments related to the input,'
                              ' ex : path to the inbox file...'))
    parser.add_argument('-o', '--output', action='store', dest='output', default=None,
                        help='File where to put the output (default to STDOUT)')
    parser.add_argument('-v', '--version', action='store_true', dest='show_version',
                        help='Print the version and exit')
    args = parser.parse_args()

    if hasattr(args, 'show_version') and args.show_version:
        print('SMSShell parser version v{}'.format(__version__))
        sys.exit(0)

    if args.input == 'env':
        content = SMSShell.utils.GammuSMSParser.decodeFromEnv()
    elif args.input == 'file':
        content = SMSShell.utils.GammuSMSParser.decodeFromBackupFilePath(args.input_arg[0])
    else:
        print('You must choose a valid input method')
        sys.exit(1)

    if args.output:
        with open(args.output, 'w') as output:
            json.dump(content, output)
    else:
        json.dump(content, sys.stdout)
    sys.exit(0)
